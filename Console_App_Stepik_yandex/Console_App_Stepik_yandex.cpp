// Console_App_Stepik_yandex.cpp : This file contains the 'main' function. Program execution begins and ends there.
// 1.11 Словари и множества. Step 8.
///////////////////////////////////////////
/// Латино - Английский словарь
///////////////////////////////////////////
/*
Однажды, разбирая старые книги на чердаке, школьник Вася нашёл англо - латинский словарь. 
Английский он к тому времени знал в совершенстве, и его мечтой было изучить латынь.
Поэтому попавшийся словарь был как раз кстати.

К сожалению, для полноценного изучения языка недостаточно только одного словаря : кроме англо - латинского необходим латинско - английский.
За неимением лучшего он решил сделать второй словарь из первого.

Как известно, словарь состоит из переводимых слов, к каждому из которых приводится несколько слов - переводов.
Для каждого латинского слова, встречающегося где - либо в словаре, Вася предлагает найти все его переводы 
(то есть все английские слова, для которых наше латинское встречалось в его списке переводов), и считать их и только их переводами этого латинского слова.

Помогите Васе выполнить работу по созданию латинско - английского словаря из англо - латинского.

Входные данные
В первой строке содержится единственное целое число N — количество английских слов в словаре.Далее следует N описаний.
Каждое описание содержится в отдельной строке, в которой записано сначала английское слово, затем отделённый пробелами дефис (символ номер 45), 
затем разделённые запятыми с пробелами переводы этого английского слова на латинский.Переводы отсортированы в лексикографическом порядке.
Порядок следования английских слов в словаре также лексикографический.

Все слова состоят только из маленьких латинских букв, длина каждого слова не превосходит 15 символов.Общее количество слов на входе не превышает 100000.

Выходные данные
В первой строке программа должна вывести количество слов в соответствующем данному латинско - английском словаре.
Со второй строки выведите сам словарь, в точности соблюдая формат входных данных.В частности, первым должен идти перевод лексикографически минимального латинского слова, 
далее — второго в этом порядке и т.д.Внутри перевода английские слова должны быть также отсортированы лексикографически.

Sample Input :
3
apple - malum, pomum, popula
fruit - baca, bacca, popum
punishment - malum, multa
Sample Output :

7
baca - fruit
bacca - fruit
malum - apple, punishment
multa - punishment
pomum - apple
popula - apple
popum - fruit
*/
///////////////////////////////////////////
/// Латино - Английский словарь
///////////////////////////////////////////

#include <iostream>
#include <map>
#include <string>
#include <vector>

using namespace std;

int main() {
    string s, w_now, s_eng;
    multimap<string, string> mp;
    int n;

    //ввод
    cin >> n;
    cin >> ws;
    for (int i = 0; i < n; i++) {
        getline(cin, s);
        int count_w = 0;
        for (int j = 0; j < s.size(); ++j) {
            if ((int)s[j] != 32 && (int)s[j] != 45 && (int)s[j] != 44) {
                w_now += s[j];
            }
            else if (count_w != 0 && w_now.size() != 0) {
                mp.insert(pair<string, string>(w_now, s_eng));
                w_now = "";
            }
            else if (w_now.size() != 0) {
                s_eng = w_now;
                w_now = "";
                ++count_w;
            }
            else continue;
        }
        mp.insert(pair<string, string>(w_now, s_eng));//словарь пар лат-анг
        w_now = "";
    }

    //словарь лат-англ
    map<string, vector<string>> rez;
    for (auto elm : mp) {
        rez[elm.first].push_back(elm.second);
    }

    //вывод
    cout << rez.size() << endl;
    for (auto elm : rez) {
        cout << elm.first << " - ";
        vector <string> inVect = elm.second;
        for (unsigned j = 0; j < inVect.size(); j++) {
            if (j != inVect.size() - 1) {
                cout << inVect[j] << ", ";
            }
            else cout << inVect[j];

        }
        cout << endl;
    }
    return 0;
}
